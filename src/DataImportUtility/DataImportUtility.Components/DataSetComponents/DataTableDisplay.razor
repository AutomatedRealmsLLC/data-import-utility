@inherits FileImportUtilityComponentBase

@if (MyDataTable is not null)
{
    <table class="@DefaultCssClass"
           data-from-component="@nameof(DataTableDisplay)"
           data-component-instance="@InstanceId"
           data-mapper-state="@MapperStateId">
        <thead>
            @if (OverrideHeaderRow is not null)
            {
                @OverrideHeaderRow(MyDataTable)
            }
            else
            {
                <tr>
                    <td colspan="@MyDataTable.Columns.Count">
                        <div class="table-title-wrapper">
                            <span class="table-title">Data Table: @MyDataTable.TableName</span>
                        </div>
                    </td>
                </tr>
                <tr>
                    @foreach (DataColumn curCol in MyDataTable.Columns)
                    {
                        var hasError = MyDataTable.Rows.OfType<DataRow>().Any(row => !string.IsNullOrWhiteSpace(row.GetColumnError(curCol)));
                        var errorMessage = hasError ? "One or more rows contain an invalid value for this field." : null;

                        <th>
                            <div class="col-header-wrapper" title="@errorMessage">
                                <span class="header-text">
                                    @curCol.ColumnName
                                </span>
                                @if (hasError)
                                {
                                    <i class="error-indicator">
                                        <span class="o1l-sr-only">@errorMessage</span>
                                        @Icons.Caution(new() { { "fill", "red" } })
                                    </i>
                                }
                            </div>
                        </th>
                    }
                </tr>
            }
        </thead>
        <tbody>
            @foreach (DataRow curRow in MyDataTable.Rows)
            {
                <tr>
                    @if (OverrideDataRow is not null)
                    {
                        @OverrideDataRow(curRow)
                    }
                    else
                    {
                        for (var i = 0; i < curRow.ItemArray.Length; i++)
                        {
                            var colNum = i;
                            var curCell = curRow[colNum];
                            var colError = curRow.GetColumnError(colNum);
                            var hasError = !string.IsNullOrWhiteSpace(colError);

                            <td class="@(hasError)">
                                <div class="cell-value-wrapper">
                                    <span class="cell-value">
                                        @curCell
                                    </span>
                                    @if (hasError)
                                    {
                                        <i class="error-indicator" title="@((MarkupString)colError.Replace(Environment.NewLine, "<br />"))">
                                            <span class="o1l-sr-only">Error@(colError.Contains(Environment.NewLine) ? "s" : null):<br />@colError</span>
                                            @Icons.Caution(new() { { "fill", "red" } })
                                        </i>
                                    }
                                </div>
                            </td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
}
