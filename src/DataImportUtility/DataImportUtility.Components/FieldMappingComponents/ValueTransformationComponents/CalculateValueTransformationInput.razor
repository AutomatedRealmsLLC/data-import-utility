@using DataImportUtility.ValueTransformations

@inherits ValueTransformationInputBase<CalculateTransformation>


<div class="substring-transformation-input">
    <div class="transformation-input">
        <label for="@($"startVal_{Id}")">
            <span>Formula:</span>
            <span class="tooltip-icon" title="The formula uses placeholders in the form of ${0} to indicate an incoming value should be used.">
                @Icons.InfoIcon()
            </span>
        </label>
        <input id="@($"formula_{Id}")"
               type="string"
               class="@DefaultCssClass"
               @bind=ValueTransformation.TransformationDetail
               @bind:event="oninput"
               @bind:after=HandleOperationDetailChanged />
    </div>
    <div class="transformation-input">
        <label for="@($"maxChar_{Id}")">
            <span>Decimal Places:</span>
            <span class="tooltip-icon" title="-1 indicates no limit.">
                @Icons.InfoIcon()
            </span>
        </label>
        <input id="@($"maxChar_{Id}")"
               type="number"
               class="@DefaultCssClass"
               @bind=ValueTransformation.DecimalPlaces
               @bind:event="oninput"
               min="-1"
               max="15"
               step="1"
               @bind:after=HandleOperationDetailChanged />
    </div>
</div>

@code {
    protected override Task HandleOperationDetailChanged()
    {
        ValueTransformation.DecimalPlaces = Math.Clamp(-1, ValueTransformation.DecimalPlaces, 15);
        return base.HandleOperationDetailChanged();
    }
}